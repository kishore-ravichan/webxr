#include <iostream>
#include <vector>

using namespace std;


vector<vector<int>> multiplyMatrices(const vector<vector<int>>& A, const vector<vector<int>>& B) {
    int rowsA = A.size();
    int colsA = A[0].size();
    int rowsB = B.size();
    int colsB = B[0].size();

    
    if (colsA != rowsB) {
        throw invalid_argument("Number of columns in A must be equal to number of rows in B.");
    }

    
    vector<vector<int>> result(rowsA, vector<int>(colsB, 0));

   
    for (int i = 0; i < rowsA; ++i) {
        for (int j = 0; j < colsB; ++j) {
            for (int k = 0; k < colsA; ++k) {
                result[i][j] += A[i][k] * B[k][j];
            }
        }
    }

    return result;
}


void printMatrix(const vector<vector<int>>& matrix) {
    for (const auto& row : matrix) {
        for (int value : row) {
            cout << value << " ";
        }
        cout << endl;
    }
}

int main() {
    
    vector<vector<int>> A = {
        {1, 2, 3},
        {4, 5, 6}
    };

    vector<vector<int>> B = {
        {7, 8},
        {9, 10},
        {11, 12}
    };

    try {
        vector<vector<int>> C = multiplyMatrices(A, B);
        cout << "Result of matrix multiplication:\n";
        printMatrix(C);
    } catch (const exception& e) {
        cout << e.what() << endl;
    }

    return 0;
}
